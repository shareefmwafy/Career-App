name: Build

on:
  push:
    branches:
      - main


jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}



      # name: Build and Analyze

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     name: Build and Analyze
#     runs-on: ubuntu-latest

#     env:
#       ACTIONS_STEP_DEBUG: true # Enable detailed logs

#     steps:
#       # Step 1: Checkout the repository
#       - name: Checkout code
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0 # Disable shallow clones for better analysis

#       # Step 2: Set up Node.js (use correct version if necessary)
#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: "20.17.0" # You can change this to another version if needed

#       # Step 3: Install dependencies
#       - name: Install dependencies
#         run: npm install
#         working-directory: ./Frontend/Mobile/ # Update with the correct path to package.json

#       # Step 4: Install SonarQube scanner as a dev dependency (If not Installed)
#       - name: Install SonarQube Scanner
#         run: npm install sonarqube-scanner --save-dev
#         working-directory: ./Frontend/Mobile/

#       # Step 5: Run SonarQube Scan
#       - name: SonarQube Scan
#         run: |
#           npm run sonar-scanner
#         working-directory: ./Frontend/Mobile/
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#           SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

#       # Step 6: Optional - SonarQube Quality Gate Check
#       # Uncomment if you want to check the quality gate status
#       # - name: SonarQube Quality Gate Check
#       #   uses: sonarsource/sonarqube-quality-gate-action@v2
#       #   timeout-minutes: 5
#       #   env:
#       #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
